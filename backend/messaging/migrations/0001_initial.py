# Generated by Django 5.2.7 on 2025-10-25 10:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cipher_type', models.CharField(choices=[('caesar', 'Caesar'), ('affine', 'Affine'), ('hill', 'Hill'), ('playfair', 'Playfair')], max_length=20)),
                ('shared_key', models.JSONField(help_text='Shared encryption key between A and B')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_intercepted', models.BooleanField(default=False, help_text='Whether this conversation is under MITM attack')),
                ('user_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations_as_a', to=settings.AUTH_USER_MODEL)),
                ('user_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations_as_b', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'conversations',
                'ordering': ['-updated_at'],
                'unique_together': {('user_a', 'user_b')},
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plaintext', models.TextField(help_text='Original plaintext message (for educational purposes)')),
                ('ciphertext', models.TextField(help_text='Encrypted message')),
                ('encryption_steps', models.JSONField(blank=True, help_text='Step-by-step encryption process', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('was_intercepted', models.BooleanField(default=False, help_text='Whether this message was intercepted by MITM')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.conversation')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messages',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='InterceptedMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attacker_key', models.JSONField(help_text='Key the attacker thinks is being used')),
                ('decrypted_plaintext', models.TextField(help_text='What the attacker decrypted')),
                ('modified_plaintext', models.TextField(blank=True, help_text='Modified message from attacker', null=True)),
                ('modified_ciphertext', models.TextField(blank=True, help_text='Re-encrypted modified message', null=True)),
                ('attack_steps', models.JSONField(blank=True, help_text='Step-by-step MITM attack process', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=False, help_text='Whether the attack successfully decrypted the message')),
                ('attacker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='intercepted_messages', to=settings.AUTH_USER_MODEL)),
                ('original_message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='interception', to='messaging.message')),
            ],
            options={
                'db_table': 'intercepted_messages',
                'ordering': ['-timestamp'],
            },
        ),
    ]
